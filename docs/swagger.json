{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/v1/attendance/submit": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Users can submit one attendance per day. Weekend submissions are rejected. If already submitted for the same day, response will indicate \"already_exists\".",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Attendance"
                ],
                "summary": "Submit attendance (weekday only)",
                "parameters": [
                    {
                        "description": "Submit Attendance Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/attendance.SubmitAttendanceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/attendance.SubmitAttendanceResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request / weekend not allowed",
                        "schema": {
                            "$ref": "#/definitions/utils.Response-any"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.Response-any"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/utils.Response-any"
                        }
                    },
                    "408": {
                        "description": "Request Process Timeout",
                        "schema": {
                            "$ref": "#/definitions/utils.Response-any"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/auth/login": {
            "post": {
                "description": "Login user with email and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Login User",
                "parameters": [
                    {
                        "description": "Login User Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.LoginUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/auth.LoginUserResponse"
                        }
                    },
                    "400": {
                        "description": "Error response",
                        "schema": {
                            "$ref": "#/definitions/utils.Response-any"
                        }
                    },
                    "401": {
                        "description": "Error response",
                        "schema": {
                            "$ref": "#/definitions/utils.Response-any"
                        }
                    },
                    "500": {
                        "description": "Error response",
                        "schema": {
                            "$ref": "#/definitions/utils.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/auth/register": {
            "post": {
                "description": "Register new user with required fields",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Register User",
                "parameters": [
                    {
                        "description": "Register User Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.RegisterUserRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/auth.RegisterUserResponse"
                        }
                    },
                    "400": {
                        "description": "Error response",
                        "schema": {
                            "$ref": "#/definitions/utils.Response-any"
                        }
                    },
                    "409": {
                        "description": "Error response",
                        "schema": {
                            "$ref": "#/definitions/utils.Response-any"
                        }
                    },
                    "500": {
                        "description": "Error response",
                        "schema": {
                            "$ref": "#/definitions/utils.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/overtime/submit": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Submit overtime hours (\u003c= 3h). Only allowed after 17:00 WIB if submitting for today. Weekend allowed.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Overtime"
                ],
                "summary": "Submit overtime",
                "parameters": [
                    {
                        "description": "Submit Overtime Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/overtime.SubmitOvertimeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/overtime.SubmitOvertimeResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request / hours \u003e 3 / before 17:00",
                        "schema": {
                            "$ref": "#/definitions/utils.Response-any"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.Response-any"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/utils.Response-any"
                        }
                    },
                    "408": {
                        "description": "Request Process Timeout",
                        "schema": {
                            "$ref": "#/definitions/utils.Response-any"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/payroll/periods": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Admin membuat periode payroll (tidak boleh overlap, end_date \u003e= start_date). Tanggal format YYYY-MM-DD.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Payroll"
                ],
                "summary": "Create payroll attendance period",
                "parameters": [
                    {
                        "description": "Create Payroll Period Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/attendance_period.CreatePeriodRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/attendance_period.PeriodResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request body / invalid dates / overlapping period",
                        "schema": {
                            "$ref": "#/definitions/utils.Response-any"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.Response-any"
                        }
                    },
                    "403": {
                        "description": "Admin only",
                        "schema": {
                            "$ref": "#/definitions/utils.Response-any"
                        }
                    },
                    "408": {
                        "description": "Request Process Timeout",
                        "schema": {
                            "$ref": "#/definitions/utils.Response-any"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/reimbursements": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a reimbursement with amount and optional description.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Reimbursement"
                ],
                "summary": "Create reimbursement",
                "parameters": [
                    {
                        "description": "Create Reimbursement Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/reimbursement.CreateReimbursementRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/reimbursement.ReimbursementResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request / amount \u003c= 0",
                        "schema": {
                            "$ref": "#/definitions/utils.Response-any"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.Response-any"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/utils.Response-any"
                        }
                    },
                    "408": {
                        "description": "Request Process Timeout",
                        "schema": {
                            "$ref": "#/definitions/utils.Response-any"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.Response-any"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "attendance.SubmitAttendanceRequest": {
            "type": "object",
            "properties": {
                "date": {
                    "description": "Optional, default = today (WIB). Format YYYY-MM-DD",
                    "type": "string"
                }
            }
        },
        "attendance.SubmitAttendanceResponse": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "status": {
                    "description": "\"created\" atau \"already_exists\"",
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "attendance_period.CreatePeriodRequest": {
            "type": "object",
            "required": [
                "end_date",
                "start_date"
            ],
            "properties": {
                "end_date": {
                    "type": "string"
                },
                "name": {
                    "description": "optional",
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                }
            }
        },
        "attendance_period.PeriodResponse": {
            "type": "object",
            "properties": {
                "end_date": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "start_date": {
                    "description": "YYYY-MM-DD",
                    "type": "string"
                }
            }
        },
        "auth.LoginUserRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 6
                }
            }
        },
        "auth.LoginUserResponse": {
            "type": "object",
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/auth.UserResponse"
                }
            }
        },
        "auth.RegisterUserRequest": {
            "type": "object",
            "required": [
                "email",
                "first_name",
                "password"
            ],
            "properties": {
                "age": {
                    "type": "integer"
                },
                "bio": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "google_id": {
                    "type": "string"
                },
                "interests": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "coding",
                        "reading",
                        "travel"
                    ]
                },
                "is_profile_complete": {
                    "type": "boolean"
                },
                "last_name": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 6
                },
                "profile_image_url": {
                    "type": "string"
                }
            }
        },
        "auth.RegisterUserResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/auth.UserResponse"
                }
            }
        },
        "auth.UserResponse": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "overtime.SubmitOvertimeRequest": {
            "type": "object",
            "required": [
                "hours"
            ],
            "properties": {
                "date": {
                    "description": "default = today (WIB), format YYYY-MM-DD",
                    "type": "string"
                },
                "hours": {
                    "type": "number",
                    "maximum": 3
                }
            }
        },
        "overtime.SubmitOvertimeResponse": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string"
                },
                "hours": {
                    "description": "string biar rapi saat format (2 desimal)",
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "status": {
                    "description": "created | already_exists",
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "reimbursement.CreateReimbursementRequest": {
            "type": "object",
            "required": [
                "amount"
            ],
            "properties": {
                "amount": {
                    "type": "number"
                },
                "date": {
                    "description": "default = today (WIB), format YYYY-MM-DD",
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "maxLength": 255
                }
            }
        },
        "reimbursement.ReimbursementResponse": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "utils.Response-any": {
            "type": "object",
            "properties": {
                "data": {},
                "responseCode": {
                    "type": "string"
                },
                "responseMessage": {
                    "type": "string"
                }
            }
        }
    }
}